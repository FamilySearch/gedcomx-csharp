// <auto-generated>
// 
//
// Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
// </auto-generated>
using System;
using System.Collections.Generic;
using System.Linq;

using Gedcomx.Model;
using Gedcomx.Model.Util;

using Newtonsoft.Json;

namespace Gx.Atom
{

    /// <remarks>
    ///  The "atom:entry" element represents an individual entry, acting as a container for metadata and data associated with the entry.
    /// </remarks>
    /// <summary>
    ///  The "atom:entry" element represents an individual entry, acting as a container for metadata and data associated with the entry.
    /// </summary>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.w3.org/2005/Atom", TypeName = "Entry")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.w3.org/2005/Atom", ElementName = "entry")]
    public partial class Entry : Gx.Atom.ExtensibleElement, ISupportsLinks
    {

        private System.Collections.Generic.List<Gx.Atom.Person> _authors;
        private System.Collections.Generic.List<Gx.Atom.Category> _categories;
        private Gx.Search.ResultConfidence _confidence;
        private Gx.Atom.Content _content;
        private System.Collections.Generic.List<Gx.Atom.Person> _contributors;
        private string _id;
        private Gx.Model.Collections.Links _links;
        private DateTime? _published;
        private bool _publishedSpecified;
        private string _rights;
        private float? _score;
        private bool _scoreSpecified;
        private string _title;
        private DateTime? _updated;
        private bool _updatedSpecified;
        private System.Xml.XmlAttribute[] _otherAttributes;
        /// <summary>
        ///  The author of the entry.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "author", Namespace = "http://www.w3.org/2005/Atom")]
        [Newtonsoft.Json.JsonProperty("authors")]
        public System.Collections.Generic.List<Gx.Atom.Person> Authors
        {
            get
            {
                return this._authors;
            }
            set
            {
                this._authors = value;
            }
        }
        /// <summary>
        ///  information about a category associated with an entry.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "category", Namespace = "http://www.w3.org/2005/Atom")]
        [Newtonsoft.Json.JsonProperty("categories")]
        public System.Collections.Generic.List<Gx.Atom.Category> Categories
        {
            get
            {
                return this._categories;
            }
            set
            {
                this._categories = value;
            }
        }
        /// <summary>
        ///  The confidence of the result, if this entry represents a search result.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "confidence", Namespace = "http://gedcomx.org/v1/")]
        [Newtonsoft.Json.JsonProperty("confidence")]
        public Gx.Search.ResultConfidence Confidence
        {
            get
            {
                return this._confidence;
            }
            set
            {
                this._confidence = value;
            }
        }

        /// <summary>
        ///  Property for the XML serializer indicating whether the "Confidence" property should be included in the output.
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [Newtonsoft.Json.JsonIgnore]
        public bool ConfidenceSpecified
        {
            get
            {
                return this._confidence != Gx.Search.ResultConfidence.NULL;
            }
            set
            {
                if (!value)
                {
                    this._confidence = Gx.Search.ResultConfidence.NULL;
                }
            }
        }
        /// <summary>
        ///  The content of the entry.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "content", Namespace = "http://www.w3.org/2005/Atom")]
        [Newtonsoft.Json.JsonProperty("content")]
        public Gx.Atom.Content Content
        {
            get
            {
                return this._content;
            }
            set
            {
                this._content = value;
            }
        }
        /// <summary>
        ///  information about a category associated with the entry
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "contributor", Namespace = "http://www.w3.org/2005/Atom")]
        [Newtonsoft.Json.JsonProperty("contributors")]
        public System.Collections.Generic.List<Gx.Atom.Person> Contributors
        {
            get
            {
                return this._contributors;
            }
            set
            {
                this._contributors = value;
            }
        }
        /// <summary>
        ///  a permanent, universally unique identifier for the entry.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "id", Namespace = "http://www.w3.org/2005/Atom")]
        [Newtonsoft.Json.JsonProperty("id")]
        public string Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        /// <summary>
        ///  a reference from a entry to a Web resource.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "link", Namespace = "http://www.w3.org/2005/Atom")]
        [Newtonsoft.Json.JsonProperty("links")]
        [JsonConverter(typeof(JsonHypermediaLinksConverter))]
        public Gx.Model.Collections.Links Links
        {
            get
            {
                return this._links ?? (_links = new Gx.Model.Collections.Links());
            }
            set
            {
                this._links = value;
            }
        }
        public bool ShouldSerializeLinks() => AnyLinks();
        public bool AnyLinks()
        {
            return _links?.Any() ?? false;
        }
        /// <summary>
        ///  instant in time associated with an event early in the life cycle of the entry.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "published", Namespace = "http://www.w3.org/2005/Atom")]
        [Newtonsoft.Json.JsonProperty("published")]
        public DateTime Published
        {
            get
            {
                return this._published.GetValueOrDefault();
            }
            set
            {
                this._published = value;
                this._publishedSpecified = true;
            }
        }

        /// <summary>
        ///  Property for the XML serializer indicating whether the "Published" property should be included in the output.
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [Newtonsoft.Json.JsonIgnore]
        public bool PublishedSpecified
        {
            get
            {
                return this._publishedSpecified;
            }
            set
            {
                this._publishedSpecified = value;
            }
        }

        /// <summary>
        ///  information about rights held in and over the entry.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "rights", Namespace = "http://www.w3.org/2005/Atom")]
        [Newtonsoft.Json.JsonProperty("rights")]
        public string Rights
        {
            get
            {
                return this._rights;
            }
            set
            {
                this._rights = value;
            }
        }
        /// <summary>
        ///  The relevance score.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "score", Namespace = "http://gedcomx.org/v1/")]
        [Newtonsoft.Json.JsonProperty("score")]
        public float Score
        {
            get
            {
                return this._score.GetValueOrDefault();
            }
            set
            {
                this._score = value;
                this._scoreSpecified = true;
            }
        }

        /// <summary>
        ///  Property for the XML serializer indicating whether the "Score" property should be included in the output.
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [Newtonsoft.Json.JsonIgnore]
        public bool ScoreSpecified
        {
            get
            {
                return this._scoreSpecified;
            }
            set
            {
                this._scoreSpecified = value;
            }
        }

        /// <summary>
        ///  a human-readable title for the entry
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "title", Namespace = "http://www.w3.org/2005/Atom")]
        [Newtonsoft.Json.JsonProperty("title")]
        public string Title
        {
            get
            {
                return this._title;
            }
            set
            {
                this._title = value;
            }
        }
        /// <summary>
        ///  the most recent instant in time when the entry was modified in a way the publisher considers significant.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "updated", Namespace = "http://www.w3.org/2005/Atom")]
        [Newtonsoft.Json.JsonProperty("updated")]
        [JsonConverter(typeof(JsonUnixTimestampConverter))]
        public DateTime Updated
        {
            get
            {
                return this._updated.GetValueOrDefault();
            }
            set
            {
                this._updated = value;
                this._updatedSpecified = true;
            }
        }

        /// <summary>
        ///  Property for the XML serializer indicating whether the "Updated" property should be included in the output.
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [Newtonsoft.Json.JsonIgnore]
        public bool UpdatedSpecified
        {
            get
            {
                return this._updatedSpecified;
            }
            set
            {
                this._updatedSpecified = value;
            }
        }


        /// <summary>
        ///  The other attributes.
        /// </summary>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] OtherAttributes
        {
            get
            {
                return this._otherAttributes;
            }
            set
            {
                this._otherAttributes = value;
            }
        }

        /// <summary>
        /// Get a link by its rel. Links are not specified by GEDCOM X core, but as extension elements by GEDCOM X RS.
        /// </summary>
        /// <param name="rel">The link rel.</param>
        /// <returns>
        /// The link by rel.
        /// </returns>
        public Links.Link GetLink(string rel)
        {
            var result = GetLinks(rel);
            return result != null ? result.FirstOrDefault() : null;
        }

        /// <summary>
        /// Get a list of links by rel. Links are not specified by GEDCOM X core, but as extension elements by GEDCOM X RS.
        /// </summary>
        /// <param name="rel">The links by rel.</param>
        /// <returns></returns>
        public List<Links.Link> GetLinks(string rel)
        {
            return this.Links != null ? this.Links.Where(x => x.Rel == rel).ToList() : null;
        }
    }
}
