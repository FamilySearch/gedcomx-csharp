using Gedcomx.Model.Util;
using Gx.Conclusion;
using Gx.Types;
// <auto-generated>
// 
//
// Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
// </auto-generated>
using System;
using System.Xml.Serialization;
using Newtonsoft.Json;
using System.Collections.Generic;

namespace Gx.Source
{

    /// <remarks>
    ///  A description of the coverage of a resource.
    /// </remarks>
    /// <summary>
    ///  A description of the coverage of a resource.
    /// </summary>
    [Serializable]
    [XmlType(Namespace = "http://gedcomx.org/v1/", TypeName = "Coverage")]
    [XmlRoot(Namespace = "http://gedcomx.org/v1/", ElementName = "coverage")]
    public partial class Coverage : Gx.Links.HypermediaEnabledData
    {

        private string _recordType;
        private Gx.Conclusion.PlaceReference _spatial;
        private Gx.Conclusion.DateInfo _temporal;
        /// <summary>
        ///  The type of record being covered.
        /// </summary>
        [XmlElement(ElementName = "recordType", Namespace = "http://gedcomx.org/v1/")]
        [JsonProperty("recordType")]
        public string RecordType
        {
            get
            {
                return this._recordType;
            }
            set
            {
                this._recordType = value;
            }
        }

        /// <summary>
        ///  Convenience property for treating RecordType as an enum. See Gx.Types.RecordTypeQNameUtil for details on getter/setter functionality.
        /// </summary>
        [XmlIgnore]
        [JsonIgnore]
        public Gx.Types.RecordType KnownRecordType
        {
            get
            {
                return XmlQNameEnumUtil.GetEnumValue<RecordType>(this._recordType);
            }
            set
            {
                this._recordType = XmlQNameEnumUtil.GetNameValue(value);
            }
        }
        /// <summary>
        ///  Spatial coverage.
        /// </summary>
        [XmlElement(ElementName = "spatial", Namespace = "http://gedcomx.org/v1/")]
        [JsonProperty("spatial")]
        public Gx.Conclusion.PlaceReference Spatial
        {
            get
            {
                return this._spatial;
            }
            set
            {
                this._spatial = value;
            }
        }
        /// <summary>
        ///  Temporal coverage.
        /// </summary>
        [XmlElement(ElementName = "temporal", Namespace = "http://gedcomx.org/v1/")]
        [JsonProperty("temporal")]
        public Gx.Conclusion.DateInfo Temporal
        {
            get
            {
                return this._temporal;
            }
            set
            {
                this._temporal = value;
            }
        }

        /**
         * Build out this coverage with spatial coverage.
         *
         * @param spatial The spatial coverage.
         * @return this.
         */
        public Coverage SetSpatial(PlaceReference spatial)
        {
            Spatial = spatial;
            return this;
        }

        /**
         * Build out this coverage with temporal coverage.
         * @param temporal The temporal coverage.
         * @return This.
         */
        public Coverage SetTemporal(DateInfo temporal)
        {
            Temporal = temporal;
            return this;
        }

        /**
         * Build out this coverage with a record type.
         *
         * @param recordType The record type.
         * @return this.
         */
        public Coverage SetRecordType(String recordType)
        {
            RecordType = recordType;
            return this;
        }

        /**
         * Build out this coverage with a record type.
         *
         * @param recordType The record type.
         * @return this.
         */
        public Coverage SetRecordType(RecordType recordType)
        {
            KnownRecordType = recordType;
            return this;
        }
    }
}
