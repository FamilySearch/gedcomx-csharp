// <auto-generated>
// 
//
// Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
// </auto-generated>
using System.Linq;

using Gedcomx.Model;
using Gedcomx.Model.Util;

namespace Gx.Links
{

    /// <remarks>
    ///  An data type that supports hypermedia controls (i.e. links).
    /// </remarks>
    /// <summary>
    ///  An data type that supports hypermedia controls (i.e. links).
    /// </summary>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://gedcomx.org/v1/", TypeName = "HypermediaEnabledData")]
    public abstract partial class HypermediaEnabledData : Gx.Common.ExtensibleData, ISupportsLinks
    {

        private Gx.Model.Collections.Links _links;
        /// <summary>
        ///  The list of hypermedia links. Links are not specified by GEDCOM X core, but as extension elements by GEDCOM X RS.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "link", Namespace = "http://gedcomx.org/v1/")]
        [Newtonsoft.Json.JsonProperty("links")]
        [Newtonsoft.Json.JsonConverter(typeof(JsonHypermediaLinksConverter))]
        public Gx.Model.Collections.Links Links
        {
            get
            {
                return this._links ?? (_links = new Gx.Model.Collections.Links());
            }
            set
            {
                this._links = value;
            }
        }
        public bool ShouldSerializeLinks() => AnyLinks();
        public bool AnyLinks()
        {
            return _links?.Any() ?? false;
        }

        /// <summary>
        /// Get a link by its rel. Links are not specified by GEDCOM X core, but as extension elements by GEDCOM X RS.
        /// </summary>
        /// <param name="rel">The link rel.</param>
        /// <returns>
        /// The link by rel.
        /// </returns>
        public Gx.Links.Link GetLink(string rel)
        {
            return GetLinks(rel).FirstOrDefault();
        }

        /// <summary>
        /// Get a list of links by rel. Links are not specified by GEDCOM X core, but as extension elements by GEDCOM X RS.
        /// </summary>
        /// <param name="rel">The links by rel.</param>
        /// <returns></returns>
        public System.Collections.Generic.List<Gx.Links.Link> GetLinks(string rel)
        {
            return this.Links.Where(x => x.Rel == rel).ToList();
        }

        /**
         * Build up this data with a link.
         *
         * @param link The link.
         * @return this.
         */
        public HypermediaEnabledData SetLink(Gx.Links.Link link)
        {
            this.Links.Add(link);
            return this;
        }

        /**
         * Build up this data with a link.
         *
         * @param rel The rel.
         * @param href The href.
         * @return this.
         */
        public HypermediaEnabledData SetLink(string rel, System.Uri href)
        {
            this.Links.Add(rel, href);
            return this;
        }

    }
}
