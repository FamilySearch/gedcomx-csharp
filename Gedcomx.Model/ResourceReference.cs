// <auto-generated>
// 
//
// Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
// </auto-generated>
using System;

namespace Gx.Common
{

    /// <remarks>
    ///  A generic reference to a resource.
    /// </remarks>
    /// <summary>
    ///  A generic reference to a resource.
    /// </summary>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://gedcomx.org/v1/", TypeName = "ResourceReference")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://gedcomx.org/v1/", ElementName = "resourceReference")]
    public sealed partial class ResourceReference
    {
        /// <summary>
        /// Combine '#' and agent Id to be used with <see cref="Gx.Common.ResourceReference"/>
        /// </summary>
        /// <param name="agent">The agent.</param>
        /// <exception cref="ArgumentException">If the person Id is null.</exception>
        public static implicit operator Gx.Common.ResourceReference(Gx.Agent.Agent agent)
        {
            if (agent.Id == null)
            {
                throw new ArgumentException("Cannot reference agent as a contributor: no id.");
            }
            return new ResourceReference("#" + agent.Id);
        }

        /// <summary>
        /// Combine '#' and analysis Id to be used with <see cref="Gx.Common.ResourceReference"/>
        /// </summary>
        /// <param name="analysis">The analysis.</param>
        /// <exception cref="ArgumentException">If the person Id is null.</exception>
        public static implicit operator Gx.Common.ResourceReference(Gx.Conclusion.Document analysis)
        {
            if (analysis.Id == null)
            {
                throw new ArgumentException("Cannot reference analysis: no id.");
            }
            return new ResourceReference("#" + analysis.Id);
        }

        /// <summary>
        /// Combine '#' and person Id to be used with <see cref="Gx.Common.ResourceReference"/>
        /// </summary>
        /// <param name="person">The person.</param>
        /// <exception cref="ArgumentException">If the person Id is null.</exception>
        public static implicit operator Gx.Common.ResourceReference(Gx.Conclusion.Person person)
        {
            if (person.Id == null)
            {
                throw new ArgumentException("Cannot reference person: no id.");
            }
            return new ResourceReference("#" + person.Id);
        }

        public ResourceReference()
        {
        }

        public ResourceReference(string resource)
            : this()
        {
            Resource = resource;
        }

        private string _resourceId;
        private string _resource;
        /// <summary>
        ///  The resource id of the resource being referenced.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName = "resourceId")]
        [Newtonsoft.Json.JsonProperty("resourceId")]
        public string ResourceId
        {
            get
            {
                return this._resourceId;
            }
            set
            {
                this._resourceId = value;
            }
        }
        /// <summary>
        ///  The URI to the resource.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName = "resource")]
        [Newtonsoft.Json.JsonProperty("resource")]
        public string Resource
        {
            get
            {
                return this._resource;
            }
            set
            {
                this._resource = value;
            }
        }

        /**
         * Build up this resource reference with a resource id.
         *
         * @param resourceId The resource id.
         * @return this.
         */
        public ResourceReference SetResourceId(String resourceId)
        {
            ResourceId = resourceId;
            return this;
        }

        /**
         * Build up this resource reference with a resource.
         *
         * @param resource The resource.
         * @return this.
         */
        public ResourceReference SetResource(String resource)
        {
            Resource = resource;
            return this;
        }
    }
}
