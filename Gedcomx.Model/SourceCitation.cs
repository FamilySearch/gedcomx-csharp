using Gedcomx.Model.Rt;
using Gx.Common;
// <auto-generated>
// 
//
// Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
// </auto-generated>
using System;
using System.Xml.Serialization;
using Newtonsoft.Json;
using System.Collections.Generic;

namespace Gx.Source
{

    /// <remarks>
    ///  Represents a source citation.
    /// </remarks>
    /// <summary>
    ///  Represents a source citation.
    /// </summary>
    [Serializable]
    [XmlType(Namespace = "http://gedcomx.org/v1/", TypeName = "SourceCitation")]
    public partial class SourceCitation : Gx.Links.HypermediaEnabledData
    {

        private string _lang;
        private Gx.Common.ResourceReference _citationTemplate;
        private List<Gx.Source.CitationField> _fields;
        private string _value;
        /// <summary>
        ///  The language of the note.
        /// </summary>
        [XmlAttribute(AttributeName = "lang", Namespace = "http://www.w3.org/XML/1998/namespace")]
        [JsonProperty("lang")]
        public string Lang
        {
            get
            {
                return this._lang;
            }
            set
            {
                this._lang = value;
            }
        }
        /// <summary>
        ///  A reference to the citation template for this citation.
        /// </summary>
        [XmlElement(ElementName = "citationTemplate", Namespace = "http://gedcomx.org/v1/")]
        [JsonProperty("citationTemplate")]
        public Gx.Common.ResourceReference CitationTemplate
        {
            get
            {
                return this._citationTemplate;
            }
            set
            {
                this._citationTemplate = value;
            }
        }
        /// <summary>
        ///  The list of citation fields.
        /// </summary>
        [XmlElement(ElementName = "field", Namespace = "http://gedcomx.org/v1/")]
        [JsonProperty("fields")]
        public List<Gx.Source.CitationField> Fields
        {
            get
            {
                return this._fields;
            }
            set
            {
                this._fields = value;
            }
        }
        /// <summary>
        ///  A rendering (as a string) of a source citation.  This rendering should be the most complete rendering available.
        /// </summary>
        [XmlElement(ElementName = "value", Namespace = "http://gedcomx.org/v1/")]
        [JsonProperty("value")]
        public string Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }

        /**
         * Accept a visitor.
         *
         * @param visitor The visitor.
         */
        public void Accept(IGedcomxModelVisitor visitor)
        {
            visitor.VisitSourceCitation(this);
        }

        /**
         * Build out this source citation with a lang.
         * @param lang The lang.
         * @return this.
         */
        public SourceCitation SetLang(String lang)
        {
            Lang = lang;
            return this;
        }

        /**
         * Build out this source citation with a value.
         *
         * @param value The value.
         * @return this.
         */
        public SourceCitation SetValue(String value)
        {
            Value = value;
            return this;
        }

        /**
         * Build out this source citation with a template.
         * @param citationTemplate The template.
         * @return this.
         */
        public SourceCitation SetCitationTemplate(ResourceReference citationTemplate)
        {
            CitationTemplate = citationTemplate;
            return this;
        }

        /**
         * Build out this citation with a field.
         * @param fields The field.
         * @return This.
         */
        public SourceCitation SetField(CitationField fields)
        {
            AddField(fields);
            return this;
        }

        /**
         * Add a reference to the citation fields.
         *
         * @param field The field to be added.
         */
        public void AddField(CitationField field)
        {
            if (field != null)
            {
                if (_fields == null)
                {
                    _fields = new List<CitationField>();
                }
                _fields.Add(field);
            }
        }
    }
}
